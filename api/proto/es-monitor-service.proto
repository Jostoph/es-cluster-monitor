syntax = "proto3";
package proto;

option go_package = "github.com/Jostoph/es-cluster-monitor/pkg/api";

// Service: Monitoring Service
service MonitorService {
  rpc ReadClusterHealth(ClusterHealthRequest) returns (ClusterHealthResponse);
  rpc ReadIndicesInfo(IndicesInfoRequest) returns (IndicesInfoResponse);
}

// Request: Health of a Cluster
message ClusterHealthRequest {}

enum Status {
  UNKNOWN = 0;
  GREEN = 1;
  YELLOW = 2;
  RED = 3;
}

// Response: Health of a Cluster
message ClusterHealthResponse {
  string cluster_name = 1;
  Status status = 2;
  bool timed_out = 3;
  int32 number_of_nodes = 4;
  int32 number_of_data_nodes = 5;
  int32 active_primary_shards = 6;
  int32 active_shards = 7;
  int32 relocating_shards = 8;
  int32 initializing_shards = 9;
  int32 unassigned_shards = 10;
  int32 delayed_unassigned_shards = 11;
  int32 number_of_pending_tasks = 12;
  int32 number_of_in_flight_fetch = 13;
  int32 task_max_waiting_in_queue_millis = 14;
  float active_shards_percent_as_number = 15;
  int64 timestamp = 16;
}

// Request: Indices Info
message IndicesInfoRequest {}

// Response: Indices Info
message IndicesInfoResponse {
  repeated IndexInfo indices = 1;
  int64 timestamp = 2;
}

// Single Index Info
message IndexInfo {
  Status health = 1;
  string status = 2;
  string index = 3;
  string uuid = 4;
  int32 pri = 5;
  int32 rep = 6;
  int32 docs_count = 7;
  int32 docs_deleted = 8;
  int64 store_size = 9;
  int64 pri_store_size = 10;
}
